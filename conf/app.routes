# microservice specific routes

->         /hmrc-frontend                   hmrcfrontend.Routes

#Initialise appeal and start page
GET        /appeal-start                                controllers.AppealStartController.onPageLoad()
GET        /initialise-appeal                           controllers.InitialiseAppealController.onPageLoad(penaltyId: String, isLPP: Boolean, isAdditional:Boolean)
GET        /initialise-appeal-against-the-obligation    controllers.InitialiseAppealController.onPageLoadForObligation(penaltyId: String)
GET        /initialise-appeal-find-out-how-to-appeal    controllers.InitialiseAppealController.onPageLoadForFindOutHowToAppeal(principalChargeReference: String, vatAmountInPence: Int, vatPeriodStartDate: String, vatPeriodEndDate:String, isCa: Boolean)

#Reasonable excuse list
GET        /reason-for-missing-deadline     controllers.ReasonableExcuseController.onPageLoad()
POST       /reason-for-missing-deadline     controllers.ReasonableExcuseController.onSubmit()

#Honesty declaration
GET        /honesty-declaration             controllers.HonestyDeclarationController.onPageLoad()
POST       /honesty-declaration             controllers.HonestyDeclarationController.onSubmit()

GET        /sign-out                        controllers.SignOutController.signOut(isAuthorised: Boolean)
GET        /language/:lang                  controllers.LanguageSwitchController.switchToLanguage(lang: String)
GET        /assets/*file                     controllers.Assets.versioned(path = "/public", file: Asset)

# Bereavement Reasonable Excuse Journey
GET        /when-did-the-person-die                     controllers.BereavementReasonController.onPageLoadForWhenThePersonDied(mode: Mode = NormalMode)
GET        /when-did-the-person-die/change              controllers.BereavementReasonController.onPageLoadForWhenThePersonDied(mode: Mode = CheckMode)
POST       /when-did-the-person-die                     controllers.BereavementReasonController.onSubmitForWhenThePersonDied(mode: Mode = NormalMode)
POST       /when-did-the-person-die/change              controllers.BereavementReasonController.onSubmitForWhenThePersonDied(mode: Mode = CheckMode)

# Crime Reasonable Excuse Journey
GET        /when-did-the-crime-happen              controllers.CrimeReasonController.onPageLoadForWhenCrimeHappened(mode: Mode = NormalMode)
GET        /when-did-the-crime-happen/change       controllers.CrimeReasonController.onPageLoadForWhenCrimeHappened(mode: Mode = CheckMode)
POST       /when-did-the-crime-happen              controllers.CrimeReasonController.onSubmitForWhenCrimeHappened(mode: Mode = NormalMode)
POST       /when-did-the-crime-happen/change       controllers.CrimeReasonController.onSubmitForWhenCrimeHappened(mode: Mode = CheckMode)
GET        /has-this-crime-been-reported           controllers.CrimeReasonController.onPageLoadForHasCrimeBeenReported(mode: Mode = NormalMode)
GET        /has-this-crime-been-reported/change    controllers.CrimeReasonController.onPageLoadForHasCrimeBeenReported(mode: Mode = CheckMode)
POST       /has-this-crime-been-reported           controllers.CrimeReasonController.onSubmitForHasCrimeBeenReported(mode: Mode = NormalMode)
POST       /has-this-crime-been-reported/change    controllers.CrimeReasonController.onSubmitForHasCrimeBeenReported(mode: Mode = CheckMode)

# Fire or Flood Reasonable Excuse Journey
GET        /when-did-the-fire-or-flood-happen               controllers.FireOrFloodReasonController.onPageLoad(mode: Mode = NormalMode)
GET        /when-did-the-fire-or-flood-happen/change        controllers.FireOrFloodReasonController.onPageLoad(mode: Mode = CheckMode)
POST       /when-did-the-fire-or-flood-happen               controllers.FireOrFloodReasonController.onSubmit(mode: Mode = NormalMode)
POST       /when-did-the-fire-or-flood-happen/change        controllers.FireOrFloodReasonController.onSubmit(mode: Mode = CheckMode)

# Loss of Staff Reasonable Excuse Journey
GET        /when-did-the-person-leave                     controllers.LossOfStaffReasonController.onPageLoad(mode: Mode = NormalMode)
GET        /when-did-the-person-leave/change              controllers.LossOfStaffReasonController.onPageLoad(mode: Mode = CheckMode)
POST       /when-did-the-person-leave                     controllers.LossOfStaffReasonController.onSubmit(mode: Mode = NormalMode)
POST       /when-did-the-person-leave/change              controllers.LossOfStaffReasonController.onSubmit(mode: Mode = CheckMode)

# Technical Issues Reasonable Excuse Journey
GET        /when-did-the-technology-issues-begin                     controllers.TechnicalIssuesReasonController.onPageLoadForWhenTechnologyIssuesBegan(mode: Mode = NormalMode)
GET        /when-did-the-technology-issues-begin/change              controllers.TechnicalIssuesReasonController.onPageLoadForWhenTechnologyIssuesBegan(mode: Mode = CheckMode)
POST       /when-did-the-technology-issues-begin                     controllers.TechnicalIssuesReasonController.onSubmitForWhenTechnologyIssuesBegan(mode: Mode = NormalMode)
POST       /when-did-the-technology-issues-begin/change              controllers.TechnicalIssuesReasonController.onSubmitForWhenTechnologyIssuesBegan(mode: Mode = CheckMode)
GET        /when-did-the-technology-issues-end                       controllers.TechnicalIssuesReasonController.onPageLoadForWhenTechnologyIssuesEnded(mode: Mode = NormalMode)
GET        /when-did-the-technology-issues-end/change                controllers.TechnicalIssuesReasonController.onPageLoadForWhenTechnologyIssuesEnded(mode: Mode = CheckMode)
POST       /when-did-the-technology-issues-end                       controllers.TechnicalIssuesReasonController.onSubmitForWhenTechnologyIssuesEnded(mode: Mode = NormalMode)
POST       /when-did-the-technology-issues-end/change                controllers.TechnicalIssuesReasonController.onSubmitForWhenTechnologyIssuesEnded(mode: Mode = CheckMode)

# Health Reasonable Excuse Journey
GET        /was-a-hospital-stay-required                   controllers.HealthReasonController.onPageLoadForWasHospitalStayRequired(mode: Mode = NormalMode)
GET        /was-a-hospital-stay-required/change            controllers.HealthReasonController.onPageLoadForWasHospitalStayRequired(mode: Mode = CheckMode)
POST       /was-a-hospital-stay-required                   controllers.HealthReasonController.onSubmitForWasHospitalStayRequired(mode: Mode = NormalMode)
POST       /was-a-hospital-stay-required/change            controllers.HealthReasonController.onSubmitForWasHospitalStayRequired(mode: Mode = CheckMode)
GET        /when-did-health-issue-happen                   controllers.HealthReasonController.onPageLoadForWhenHealthReasonHappened(mode: Mode = NormalMode)
GET        /when-did-health-issue-happen/change            controllers.HealthReasonController.onPageLoadForWhenHealthReasonHappened(mode: Mode = CheckMode)
POST       /when-did-health-issue-happen                   controllers.HealthReasonController.onSubmitForWhenHealthReasonHappened(mode: Mode = NormalMode)
POST       /when-did-health-issue-happen/change            controllers.HealthReasonController.onSubmitForWhenHealthReasonHappened(mode: Mode = CheckMode)
GET        /when-did-hospital-stay-begin                   controllers.HealthReasonController.onPageLoadForWhenDidHospitalStayBegin(mode: Mode = NormalMode)
GET        /when-did-hospital-stay-begin/change            controllers.HealthReasonController.onPageLoadForWhenDidHospitalStayBegin(mode: Mode = CheckMode)
POST       /when-did-hospital-stay-begin                   controllers.HealthReasonController.onSubmitForWhenDidHospitalStayBegin(mode: Mode = NormalMode)
POST       /when-did-hospital-stay-begin/change            controllers.HealthReasonController.onSubmitForWhenDidHospitalStayBegin(mode: Mode = CheckMode)
GET        /when-did-hospital-stay-end                     controllers.HealthReasonController.onPageLoadForWhenDidHospitalStayEnd(mode: Mode = NormalMode)
GET        /when-did-hospital-stay-end/change              controllers.HealthReasonController.onPageLoadForWhenDidHospitalStayEnd(mode: Mode = CheckMode)
POST       /when-did-hospital-stay-end                     controllers.HealthReasonController.onSubmitForWhenDidHospitalStayEnd(mode: Mode = NormalMode)
POST       /when-did-hospital-stay-end/change              controllers.HealthReasonController.onSubmitForWhenDidHospitalStayEnd(mode: Mode = CheckMode)
GET        /has-the-hospital-stay-ended                    controllers.HealthReasonController.onPageLoadForHasHospitalStayEnded(mode:Mode = NormalMode)
GET        /has-the-hospital-stay-ended/change             controllers.HealthReasonController.onPageLoadForHasHospitalStayEnded(mode:Mode = CheckMode)
POST       /has-the-hospital-stay-ended                    controllers.HealthReasonController.onSubmitForHasHospitalStayEnded(mode:Mode = NormalMode)
POST       /has-the-hospital-stay-ended/change             controllers.HealthReasonController.onSubmitForHasHospitalStayEnded(mode:Mode = CheckMode)

# Other Reasonable Excuse Journey
GET        /why-was-the-vat-late                                   controllers.OtherReasonController.onPageLoadForWhyReturnSubmittedLate(mode: Mode = NormalMode)
GET        /why-was-the-vat-late/change                            controllers.OtherReasonController.onPageLoadForWhyReturnSubmittedLate(mode: Mode = CheckMode)
POST       /why-was-the-vat-late                                   controllers.OtherReasonController.onSubmitForWhyReturnSubmittedLate(mode: Mode = NormalMode)
POST       /why-was-the-vat-late/change                            controllers.OtherReasonController.onSubmitForWhyReturnSubmittedLate(mode: Mode = CheckMode)
GET        /when-inability-to-manage-account-happened              controllers.OtherReasonController.onPageLoadForWhenDidBecomeUnable(mode: Mode = NormalMode)
GET        /when-inability-to-manage-account-happened/change       controllers.OtherReasonController.onPageLoadForWhenDidBecomeUnable(mode: Mode = CheckMode)
POST       /when-inability-to-manage-account-happened              controllers.OtherReasonController.onSubmitForWhenDidBecomeUnable(mode: Mode = NormalMode)
POST       /when-inability-to-manage-account-happened/change       controllers.OtherReasonController.onSubmitForWhenDidBecomeUnable(mode: Mode = CheckMode)
GET        /upload-evidence-for-the-appeal                         controllers.OtherReasonController.onPageLoadForUploadEvidence(mode: Mode = NormalMode, isJsEnabled: Boolean)
GET        /upload-evidence-for-the-appeal/change                  controllers.OtherReasonController.onPageLoadForUploadEvidence(mode: Mode = CheckMode, isJsEnabled: Boolean)
GET        /upload-first-document                                   controllers.OtherReasonController.onPageLoadForFirstFileUpload(mode: Mode = NormalMode)
GET        /upload-first-document/change                            controllers.OtherReasonController.onPageLoadForFirstFileUpload(mode: Mode = CheckMode)
POST       /remove-file-upload                                      controllers.OtherReasonController.removeFileUpload(mode: Mode = NormalMode)
POST       /remove-file-upload/change                               controllers.OtherReasonController.removeFileUpload(mode: Mode = CheckMode)
GET        /upload-taking-longer-than-expected                     controllers.OtherReasonController.onPageLoadForUploadTakingLongerThanExpected(mode: Mode = NormalMode)
GET        /upload-taking-longer-than-expected/change              controllers.OtherReasonController.onPageLoadForUploadTakingLongerThanExpected(mode: Mode = CheckMode)
POST       /upload-taking-longer-than-expected                     controllers.OtherReasonController.onSubmitForUploadTakingLongerThanExpected(mode: Mode = NormalMode)
POST       /upload-taking-longer-than-expected/change              controllers.OtherReasonController.onSubmitForUploadTakingLongerThanExpected(mode: Mode = CheckMode)
GET        /upload-another-document                                controllers.OtherReasonController.onPageLoadForAnotherFileUpload(mode: Mode = NormalMode)
GET        /upload-another-document/change                         controllers.OtherReasonController.onPageLoadForAnotherFileUpload(mode: Mode = CheckMode)
GET        /uploaded-documents                                     controllers.OtherReasonController.onPageLoadForUploadComplete(mode: Mode = NormalMode)
GET        /uploaded-documents/change                              controllers.OtherReasonController.onPageLoadForUploadComplete(mode: Mode = CheckMode)
POST       /uploaded-documents                                     controllers.OtherReasonController.onSubmitForUploadComplete(mode: Mode = NormalMode)
POST       /uploaded-documents/change                              controllers.OtherReasonController.onSubmitForUploadComplete(mode: Mode = CheckMode)
GET        /upload-evidence-question                               controllers.OtherReasonController.onPageLoadForUploadEvidenceQuestion(mode: Mode = NormalMode)
GET        /upload-evidence-question/change                        controllers.OtherReasonController.onPageLoadForUploadEvidenceQuestion(mode: Mode = CheckMode)
POST       /upload-evidence-question                               controllers.OtherReasonController.onSubmitForUploadEvidenceQuestion(mode: Mode = NormalMode)
POST       /upload-evidence-question/change                        controllers.OtherReasonController.onSubmitForUploadEvidenceQuestion(mode: Mode = CheckMode)
GET        /remove-file/:fileReference                               controllers.RemoveFileController.onPageLoad(fileReference: String, isJsEnabled: Boolean, mode: Mode = NormalMode)
GET        /remove-file/:fileReference/change                        controllers.RemoveFileController.onPageLoad(fileReference: String, isJsEnabled: Boolean, mode: Mode = CheckMode)
POST       /remove-file/:fileReference                               controllers.RemoveFileController.onSubmit(fileReference: String, isJsEnabled: Boolean, mode: Mode = NormalMode)
POST       /remove-file/:fileReference/change                        controllers.RemoveFileController.onSubmit(fileReference: String, isJsEnabled: Boolean, mode: Mode = CheckMode)

# Who Planned to Submit VAT Return
GET        /who-planned-to-submit-vat-return                  controllers.AgentsController.onPageLoadForWhoPlannedToSubmitVATReturn(mode: Mode = NormalMode)
GET        /who-planned-to-submit-vat-return/change           controllers.AgentsController.onPageLoadForWhoPlannedToSubmitVATReturn(mode: Mode = CheckMode)
POST       /who-planned-to-submit-vat-return                  controllers.AgentsController.onSubmitForWhoPlannedToSubmitVATReturn(mode: Mode = NormalMode)
POST       /who-planned-to-submit-vat-return/change           controllers.AgentsController.onSubmitForWhoPlannedToSubmitVATReturn(mode: Mode = CheckMode)

# Cancel VAT Registration
GET        /cancel-vat-registration              controllers.CancelVATRegistrationController.onPageLoadForCancelVATRegistration()
POST       /cancel-vat-registration              controllers.CancelVATRegistrationController.onSubmitForCancelVATRegistration()


# Check Your Answers page
GET        /check-your-answers              controllers.CheckYourAnswersController.onPageLoad()
POST       /check-your-answers              controllers.CheckYourAnswersController.onSubmit()
GET        /change-answer                   controllers.CheckYourAnswersController.changeAnswer(continueUrl: RedirectUrl, page: String)

# Appeal Confirmation page
GET        /appeal-confirmation              controllers.AppealConfirmationController.onPageLoad()

# Making a late appeal page
GET        /making-a-late-appeal            controllers.MakingALateAppealController.onPageLoad()
POST       /making-a-late-appeal            controllers.MakingALateAppealController.onSubmit()

# Agents - What caused you to miss the deadline
GET        /what-caused-you-to-miss-the-deadline                controllers.AgentsController.onPageLoadForWhatCausedYouToMissTheDeadline(mode: Mode = NormalMode)
GET        /what-caused-you-to-miss-the-deadline/change         controllers.AgentsController.onPageLoadForWhatCausedYouToMissTheDeadline(mode: Mode = CheckMode)
POST       /what-caused-you-to-miss-the-deadline                controllers.AgentsController.onSubmitForWhatCausedYouToMissTheDeadline(mode: Mode = NormalMode)
POST       /what-caused-you-to-miss-the-deadline/change         controllers.AgentsController.onSubmitForWhatCausedYouToMissTheDeadline(mode: Mode = CheckMode)

# Appeal Obligation - Unhappy path
GET        /you-cannot-appeal              controllers.YouCannotAppealController.onPageLoad

# Other Relevant Information page
GET        /other-relevant-information                         controllers.AppealAgainstObligationController.onPageLoad(mode: Mode = NormalMode)
GET        /other-relevant-information/change                  controllers.AppealAgainstObligationController.onPageLoad(mode: Mode = CheckMode)
POST       /other-relevant-information                         controllers.AppealAgainstObligationController.onSubmit(mode: Mode = NormalMode)
POST       /other-relevant-information/change                  controllers.AppealAgainstObligationController.onSubmit(mode: Mode = CheckMode)

# Upscan endpoints
GET        /upscan/upload-status/:journeyId/:fileReference      controllers.UpscanController.getStatusOfFileUpload(journeyId: String, fileReference: String)
POST       /upscan/call-to-upscan/:journeyId                   controllers.UpscanController.initiateCallToUpscan(journeyId: String)
POST       /upscan/remove-file/:journeyId/:fileReference         controllers.UpscanController.removeFile(journeyId: String, fileReference: String)

GET           /upscan/upload-failed/:journeyId                 controllers.UpscanController.uploadFailure(journeyId: String)
OPTIONS       /upscan/upload-failed/:journeyId                 controllers.UpscanController.preFlightUpload(journeyId: String)

GET           /upscan/file-posted/:journeyId                    controllers.UpscanController.filePosted(journeyId: String)
OPTIONS       /upscan/file-posted/:journeyId                    controllers.UpscanController.preFlightUpload(journeyId: String)

GET           /upscan/file-verification/failed                   controllers.UpscanController.preUpscanCheckFailed(isAddingAnotherDocument: Boolean = false, mode: Mode = NormalMode)
GET           /upscan/file-verification/change/failed                   controllers.UpscanController.preUpscanCheckFailed(isAddingAnotherDocument: Boolean = false, mode: Mode = CheckMode)
GET           /upscan/file-verification/success                  controllers.UpscanController.fileVerification(isAddingAnotherDocument: Boolean = false, mode: Mode = NormalMode, isJsEnabled: Boolean)
GET           /upscan/file-verification/change/success                  controllers.UpscanController.fileVerification(isAddingAnotherDocument: Boolean = false, mode: Mode = CheckMode, isJsEnabled: Boolean)
GET           /upscan/file-verification/additional/failed        controllers.UpscanController.preUpscanCheckFailed(isAddingAnotherDocument: Boolean = true, mode: Mode = NormalMode)
GET           /upscan/file-verification/additional/change/failed        controllers.UpscanController.preUpscanCheckFailed(isAddingAnotherDocument: Boolean = true, mode: Mode = CheckMode)
GET           /upscan/file-verification/additional/success       controllers.UpscanController.fileVerification(isAddingAnotherDocument: Boolean = true, mode: Mode = NormalMode, isJsEnabled: Boolean)
GET           /upscan/file-verification/additional/change/success       controllers.UpscanController.fileVerification(isAddingAnotherDocument: Boolean = true, mode: Mode = CheckMode, isJsEnabled: Boolean)

# You can appeal this penalty page
GET           /you-can-appeal-this-penalty                     controllers.YouCanAppealPenaltyController.onPageLoad()
POST          /you-can-appeal-this-penalty                     controllers.YouCanAppealPenaltyController.onSubmit()

# Error pages
GET        /service-unavailable                                controllers.ServiceUnavailableController.onPageLoad()
GET        /problem-with-service                                controllers.ProblemWithServiceController.onPageLoad()
GET        /duplicate-appeal                                   controllers.DuplicateAppealController.onPageLoad()
GET        /technical-error                                     controllers.TechnicalErrorController.onPageLoad()

# Timeout pages
GET        /timeout                                            controllers.TimeoutController.onPageLoad()

# Back link
GET        /previous-page                                      controllers.PreviousPageController.previousPage(pageName: String, mode: Mode = NormalMode, isJsEnabled: Boolean)
GET        /previous-page/change                               controllers.PreviousPageController.previousPage(pageName: String, mode: Mode = CheckMode, isJsEnabled: Boolean)

# Penalty selection
GET        /multiple-penalties-for-this-period                 controllers.PenaltySelectionController.onPageLoadForPenaltySelection(mode: Mode = NormalMode)
GET        /multiple-penalties-for-this-period/change          controllers.PenaltySelectionController.onPageLoadForPenaltySelection(mode: Mode = CheckMode)
GET        /appeal-cover-for-both-penalties                    controllers.PenaltySelectionController.onPageLoadForAppealCoverBothPenalties(mode: Mode = NormalMode)
GET        /appeal-cover-for-both-penalties/change             controllers.PenaltySelectionController.onPageLoadForAppealCoverBothPenalties(mode: Mode = CheckMode)

POST       /multiple-penalties-for-this-period                 controllers.PenaltySelectionController.onSubmitForPenaltySelection(mode: Mode = NormalMode)
POST       /multiple-penalties-for-this-period/change          controllers.PenaltySelectionController.onSubmitForPenaltySelection(mode: Mode = CheckMode)

# Appeal single penalty
GET        /appeal-single-penalty                              controllers.PenaltySelectionController.onPageLoadForSinglePenaltySelection(mode: Mode = NormalMode)
GET        /appeal-single-penalty/change                       controllers.PenaltySelectionController.onPageLoadForSinglePenaltySelection(mode: Mode = CheckMode)

# Incomplete session data
GET        /incomplete-answers                                 controllers.IncompleteSessionDataController.onPageLoad()
GET        /invalid-session                                    controllers.IncompleteSessionDataController.onPageLoadWithNoJourneyData()

# Appeal by letter
GET        /appeal-by-letter                                   controllers.YouCannotAppealController.onPageLoadAppealByLetter()

# You cannot go back to appeal
GET        /you-cannot-go-back-to-appeal                       controllers.YouCannotGoBackToAppealController.onPageLoad()

# Print appeal information
GET        /appeal-details                                     controllers.ViewAppealDetailsController.onPageLoad()

# Find out how to appeal
GET        /start-find-out-how-to-appeal                       controllers.findOutHowToAppeal.FindOutHowToAppealStartController.startFindOutHowToAppeal()
GET        /if-youve-paid-your-VAT                             controllers.findOutHowToAppeal.IfYouvePaidYourVATController.onPageLoad()
GET        /other-ways-to-appeal                               controllers.findOutHowToAppeal.OtherWaysToAppealController.onPageLoad()
GET        /you-can-appeal-online-after-you-pay                controllers.findOutHowToAppeal.AppealAfterVATIsPaidController.onPageLoad()
POST       /you-can-appeal-online-after-you-pay                controllers.findOutHowToAppeal.AppealAfterVATIsPaidController.onSubmit()
GET        /appeal-after-payment-plan-setup                    controllers.findOutHowToAppeal.AppealAfterPaymentPlanSetUpController.onPageLoad()
POST       /appeal-after-payment-plan-setup                    controllers.findOutHowToAppeal.AppealAfterPaymentPlanSetUpController.onSubmit()
GET        /how-to-appeal                                      controllers.findOutHowToAppeal.HowToAppealController.onPageLoad()
GET        /can-you-pay                                        controllers.findOutHowToAppeal.CanYouPayController.onPageLoad()
POST       /can-you-pay                                        controllers.findOutHowToAppeal.CanYouPayController.onSubmit()
GET        /has-business-asked-hmrc-to-cancel-registration     controllers.findOutHowToAppeal.HasBusinessAskedHMRCToCancelRegistrationController.onPageLoad()
POST       /has-business-asked-hmrc-to-cancel-registration     controllers.findOutHowToAppeal.HasBusinessAskedHMRCToCancelRegistrationController.onSubmit()
GET        /has-hmrc-confirmed-cancellation                     controllers.findOutHowToAppeal.HasHMRCConfirmedRegistrationCancellationController.onPageLoad()
POST       /has-hmrc-confirmed-cancellation                     controllers.findOutHowToAppeal.HasHMRCConfirmedRegistrationCancellationController.onSubmit()