# Copyright 2023 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include "frontend.conf"

appName = "penalties-appeals-frontend"
play.http.router = prod.Routes


# Provides an implementation of AuditConnector. Use `uk.gov.hmrc.play.audit.AuditModule` or create your own.
# An audit connector must be provided.
play.modules.enabled += "uk.gov.hmrc.play.audit.AuditModule"

# Provides an implementation of MetricsFilter. Use `uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule` or create your own.
# A metric filter must be provided
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule"

# Provides an implementation and configures all filters required by a Platform frontend microservice.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.frontend.FrontendModule"

# Default http client
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientModule"

# Auth client module
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuthModule"

# Custom error handler
play.http.errorHandler = "config.ErrorHandler"

# Custom binder
play.modules.enabled += "global.ServiceBindings"

# Mongo module
play.modules.enabled += "uk.gov.hmrc.mongo.play.PlayMongoModule"

# CSP Filter
play.filters.enabled += "play.filters.csp.CSPFilter"

# Play Modules
# ~~~~
# Additional play modules can be added here

microservice {
  metrics {
    graphite {
      enabled = true
    }
  }

  services {
    contact-frontend {
      protocol = http
      host = localhost
      port = 9250
    }

    auth {
      host = localhost
      port = 8500
    }

    penalties-frontend {
      protocol = http
      host = localhost
      port = 9180
    }

    penalties {
      protocol = http
      host = localhost
      port = 9182
    }

    vat-agent-client-lookup-frontend {
      host = "http://localhost:9152"
      startUrl = "/vat-through-software/test-only/vaclf-stub"
    }

    upscan-initiate {
      protocol = http
      host = localhost
      port = 9570
    }
  }
}

controllers {
  controllers.Assets = {
    needsAuditing = false
  }

  uk.gov.hmrc.govukfrontend.controllers.Assets = {
    needsAuditing = false
  }

  uk.gov.hmrc.hmrcfrontend.controllers.Assets = {
      needsAuditing = false
  }
}

tracking-consent-frontend {
  gtm.container = "b"
}

play.i18n.langs = ["en", "cy"]

# Change this value to true to enable Welsh translations to be loaded from messages.cy, and to display the language toggle
features.welsh-language-support = true

feature {
  switch {
    show-digital-comms-message = false
    non-js-routing = false
    time-machine-now = ""
    warn-for-duplicate-files = false
    show-full-appeal-against-the-obligation-journey = true
    show-view-appeal-details-page = true
  }
}

timeout {
  period = 900
  countDown = 120
}

urls {
  penalties-frontend = "http://localhost:9180/penalties"
  vatOverview = "http://localhost:9152/vat-through-software/vat-overview"
  whatYouOwe = "http://localhost:9152/vat-through-software/what-you-owe"
  betaFeedbackUrl = "http://localhost:9250/contact/beta-feedback"
  reasonableExcusesGuidanceLinkUrl = "https://www.gov.uk/tax-appeals/reasonable-excuses"
  feedback = "http://localhost:9514/feedback/penalties-appeals-frontend"
}

signIn {
  url = "http://localhost:9949/auth-login-stub/gg-sign-in"
  continueBaseUrl = "http://localhost:9181"
}

reasonableExcuse {
  fetchUrl = "/penalties/appeals-data/reasonable-excuses"
  submitUrl = "/penalties/appeals/submit-appeal"
}

signOut {
  url = "http://localhost:9553/bas-gateway/sign-out-without-state?continue="
}

constants {
  daysRequiredForLateAppeal = 30
  numberOfCharsInTextArea = 5000
}

penalties-appeals-frontend-host = "http://localhost:9181"

contact-frontend.serviceId = "vat-penalties"

mongodb {
  uri = "mongodb://localhost:27017/penalties-appeals-frontend"
  ttl = 1 hour
}

upscan {
  callback.base = "http://localhost:9181"
  base = "http://localhost:9181"
  failureUrl = "http://localhost:9181/penalties-appeals/upscan/upload-failed/"
  successUrl = "http://localhost:9181/penalties-appeals/upscan/file-posted/"
  acceptedFileTypes = "image/jpeg,image/png,image/tiff,application/pdf,text/plain,application/vnd.ms-outlook,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document,application/vnd.ms-excel,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet,application/vnd.oasis.opendocument.text,application/vnd.oasis.opendocument.spreadsheet,application/vnd.ms-powerpoint,application/vnd.openxmlformats-officedocument.presentationml.presentation,application/vnd.oasis.opendocument.presentation"
  maxFileSize = 6291456
  statusCheckTimeout = 5 # Timeout in seconds
  statusCheckDelay = 500 # Amount to delay check of status by X ms
  delayCallbackUpdate = true # Waits before updating the record with the callback (fixes a race condition locally - should only be enabled locally)
  callbackUpdateDelay = 500 # Amount to delay updating record during callback (to fix a bug where callback runs before the filePosted locally - due to upscan stub)
}

accessibility-statement.service-path = "/penalties-appeals"
